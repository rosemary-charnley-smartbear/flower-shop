openapi: 3.0.0
info:
  description: |
    This is a sample Flower Shop server.  
    This includes the Billing REST APIs.
    You can find
    out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "1.0.0"
  title: Flower Shop -- Billing 
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: rosemary.charnley@smartbear.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Charnley-Test/Billing-Flower-Shop/1.0.0
  - description: Development Server
    url: 'https://development.flowershop.io/v1'
  # Staging Server
  - description: Staging Server
    url: 'https://staging.flowershop.io/v1'
  # Production Server
  - description: Production Server
    url: 'https://api.flowershop.io/v1'
tags:
  - name: Bill
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: Receipt
    description: Access to Petstore orders
  - name: Process
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
  - name: Credit
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
  - name: Checks
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
  - name: Cash
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
paths: 
  /bill:
    post: 
      tags:
        - Bill
      summary: Submit a bill.
      requestBody: 
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/Bill'
      responses: 
        '200':
          description: Bill submitted. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
  
  /bill/{id}:
    get: 
      tags: 
        - Bill 
      parameters:
        - name: id
          in: path
          description: Bill id.
          required: true
          schema:
            type: string
      summary: Get a bill.
      responses: 
        '200':
          description: Get a bill. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
  /receipt:
    post: 
        tags:
          - Receipt
        summary: Create a receipt.
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Receipt'
        responses: 
          '200':
            description: Receipt created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Receipt'
  /receipt/{id}: 
    get: 
        tags: 
          - Receipt 
        parameters:
          - name: id
            in: path
            description: Receipt id.
            required: true
            schema:
              type: string
        summary: Get a receipt.
        responses: 
          '200':
            description: Get a receipt. 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Receipt'
  /process:
    post: 
        tags:
          - Process
        summary: Process a bill.
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Bill'
        responses: 
          '200':
            description: Bill processed.
components:
  schemas:
    Address: 
      type: object
      properties:
        address_1: 
          type: string 
        address_2: 
          type: string 
        zipcode:  
          type: integer
        country:
          type: string 
    Person: 
      type: object 
      required: 
        - id
        - firstname
        - last name 
        - email 
      properties: 
        id: 
          type: string 
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        firstname: 
          type: string 
          example: John
        lastname: 
          type: string 
          example: Doe
        email: 
          type: string 
          example: customer@smartbear.com
        phonenumber:
          type: string 
          example: '123-456-7890'
        address: 
          type: string 
          example: '123 Coffee Street'
    Bill: 
      type: object
      required: 
        - id
      properties:
        id: 
          type: string 
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        person: 
          $ref: '#/components/schemas/Person'
        billingAddress: 
          $ref: '#/components/schemas/Address'
        discountCode:
          type: string 
        paymentType: 
          type: string 
        discount: 
          type: number 
        subtotal: 
          type: number 
        tax: 
          type: number 
        total: 
          type: number 
    Receipt: 
      type: object
      required: 
        - id
      properties:
        id: 
          type: string 
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        person: 
          $ref: '#/components/schemas/Person'
        billingAddress: 
          $ref: '#/components/schemas/Address'
        purchases: 
          type: array 
          items: 
            type: object
        paymentType: 
          type: string 
        discountCode:
          type: string 
        discount: 
          type: number 
        subtotal: 
          type: number 
        tax: 
          type: number 
        total: 
          type: number